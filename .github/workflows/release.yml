---
name: Release

on:
  push:
    branches: [ master, alpha, beta ]

# semantic-release is built around the following idea:
#
# > A release consist in running test, defining the version then releasing
#
# - https://github.com/semantic-release/semantic-release/issues/753#issuecomment-384689034
#
# So we perform the following actions from the context of semantic-release plugins:
#
# - compile all target binaries
# - docker build and publish
# - npm publish
# - create GitHub release

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      BINARY_NAME: monorepo
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: 1
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install macOS cross-compilation dependencies
      run: |
        sudo apt update
        sudo apt install --yes \
          g++ \
          gcc \
          libgmp-dev \
          libmpc-dev \
          libmpfr-dev \
          libssl-dev \
          libxml2-dev \
          zlib1g-dev

    - uses: actions/cache@v2
      id: cache-osxcross
      with:
        path: |
          ~/osxcross
        key: ${{ runner.os }}-osxcross-${{ hashFiles('$GITHUB_WORKSPACE/ci/resource-macos-sdk') }}

    - name: Install osxcross
      if: steps.cache-osxcross.outputs.cache-hit != 'true'
      run: |
        sdk=$(cat $GITHUB_WORKSPACE/ci/resource-macos-sdk)
        git clone https://github.com/tpoechtrager/osxcross ~/osxcross
        pushd ~/osxcross
        curl -O $sdk
        mv $(basename $sdk) tarballs/
        UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh
        popd

    - name: Add macOS cross-compilation binaries to path
      run: echo "$HOME/osxcross/target/bin" >> $GITHUB_PATH

    - name: Install GNU/Linux toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-linux-gnu

    - name: Install macOS toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-apple-darwin

    - uses: actions/cache@v2
      id: cache-cargo
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install semantic-release-rust
      uses: actions-rs/cargo@v1
      if: steps.cache-cargo.outputs.cache-hit != 'true'
      with:
        command: install
        args: semantic-release-rust --version 1.0.0-alpha.8

    - name: Invoke semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
      run: |
        npm ci --ignore-scripts
        npx semantic-release
