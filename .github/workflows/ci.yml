---
name: CI

on: [ pull_request ]

env:
  BINARY_NAME: monorepo
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install GNU/Linux toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-linux-gnu

    - name: Cache cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build docker image
      run: docker build -f Dockerfile .

  cargo-check:
    runs-on: ${{ matrix.triple.os }}
    strategy:
      matrix:
        triple:
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
              rust: stable,
            }
          - {
              os: "ubuntu-latest",
              target: "i686-unknown-linux-gnu",
              cross: true,
              rust: stable,
            }
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-musl",
              cross: false,
              rust: stable,
            }
          - {
              os: "ubuntu-latest",
              target: "i686-unknown-linux-musl",
              cross: true,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-msvc",
              cross: false,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "i686-pc-windows-msvc",
              cross: false,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-gnu",
              cross: false,
              rust: stable,
            }
          - {
              os: "macOS-latest",
              target: "x86_64-apple-darwin",
              cross: false,
              rust: stable,
            }
          # aarch64
          - {
              os: "ubuntu-latest",
              target: "aarch64-unknown-linux-gnu",
              cross: true,
              rust: stable,
            }
          # macOS ARM
          - {
              os: "macOS-latest",
              target: "aarch64-apple-darwin",
              cross: true,
              rust: stable,
            }
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746 # https://github.com/actions-rs/toolchain/commit/88dc2356392166efad76775c878094f4e83ff746
        with:
          profile: minimal
          toolchain: ${{ matrix.triple.rust }}
          override: true
          target: ${{ matrix.triple.target }}
      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets --verbose --target=${{ matrix.triple.target }}
          use-cross: ${{ matrix.triple.cross }}
