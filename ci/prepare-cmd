#!/bin/bash
#
# This script runs during the `prepareCmd` stage of the semantic-release
# workflow.
#
# Usage:
#   prepare-cmd <next-version>

set -o errexit
set -o nounset
set -o pipefail

version=${1:?Must pass the next version number as a positional argument}
shift

# update Cargo.toml with the next version so we compile the right version
# number into our rust binaries
semantic-release-rust prepare "${version}"

# prepare room for release artifacts
mkdir dist builds

## GNU/Linux
# compile the GNU/Linux binary
cargo build --release --target x86_64-unknown-linux-gnu

# bundle the GNU/Linux binary for distribution in the GitHub release
mkdir -p builds/typescript-tools-x86_64-unknown-linux-gnu
cp target/x86_64-unknown-linux-gnu/release/monorepo builds/typescript-tools-x86_64-unknown-linux-gnu/
tar -C builds -czvf dist/typescript-tools-x86_64-unknown-linux-gnu.tar.gz typescript-tools-x86_64-unknown-linux-gnu

## macOS
# compile the macOS binary
OPENSSL_LIB_DIR=/usr/local/ssl/lib \
  OPENSSL_INCLUDE_DIR=/usr/local/ssl/include \
  OPENSSL_STATIC=1 \
  PKG_CONFIG_ALLOW_CROSS=1 \
  cargo build --release --target x86_64-apple-darwin

# bundle the macOS binary for distribution in the GitHub release
mkdir -p builds/typescript-tools-x86_64-apple-darwin
cp target/x86_64-apple-darwin/release/monorepo builds/typescript-tools-x86_64-apple-darwin/
tar -C builds -czvf dist/typescript-tools-x86_64-apple-darwin.tar.gz typescript-tools-x86_64-apple-darwin
